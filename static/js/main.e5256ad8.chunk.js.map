{"version":3,"sources":["sounds/sunny.wav","sounds/school.wav","components/Activity.js","components/Header.js","components/Pomodoro.js","components/Break.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Activity","props","Card","Img","variant","src","photo","Body","Title","title","time","Text","description","Button","onClick","click","Header","Jumbotron","className","Container","pomodoros","reward","break","Pomodoro","state","isOpen","pomodoroTime","timeLeft","audio","Audio","this","startDate","Date","timerId","setInterval","Math","round","setState","clearInterval","doneWav","autoPlay","Modal","show","onHide","stop","backdrop","keyboard","size","aria-labelledby","centered","closeButton","activity","Image","fluid","Footer","finish","Component","Break","breakTime","App","finishPomodoro","i","activities","slice","pomodorosDoneToday","todaysReward","ceil","random","maxReward","pomodoroRunning","pauseRunning","pomodoroIndex","undefined","stopPomodoro","Row","map","element","index","Col","sm","md","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e5256ad8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunny.4cc18d72.wav\";","module.exports = __webpack_public_path__ + \"static/media/school.6bc38242.wav\";","import React from 'react'\r\nimport {Card, Button} from 'react-bootstrap'\r\n\r\nfunction Activity(props) {\r\n    return (\r\n        <Card>\r\n        <Card.Img variant=\"top\" src={props.photo} />\r\n        <Card.Body>\r\n            <Card.Title>{props.title} - {props.time} mins</Card.Title>\r\n            <Card.Text>\r\n                {props.description}\r\n            </Card.Text>\r\n            <Button variant=\"primary\" onClick={props.click}>Start</Button>\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Activity","import React from 'react'\r\nimport {Jumbotron, Container, Button} from 'react-bootstrap'\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <Jumbotron className=\"pb-3 pt-4\">\r\n            <Container className=\"text-center\">\r\n                <h2>It is not enough to be industrious; so are the ants. What are you industrious about?\r\n                    \t<span className=\"font-weight-light\"> - You worked {props.pomodoros/2} hrs and won {props.reward} ron today.</span>\r\n                </h2>\r\n                <p>\r\n                <Button variant=\"secondary\" className=\"mt-3\" onClick={props.break}>Take a quick break</Button>\r\n                </p>                \r\n            </Container>\r\n        </Jumbotron>\r\n    )\r\n} \r\n\r\nexport default Header","import React, {Component} from 'react'\r\nimport {Button, Modal, Image} from 'react-bootstrap'\r\nimport doneWav from '../sounds/sunny.wav'\r\n\r\nclass Pomodoro extends Component {\r\n    state = {\r\n      isOpen: true,\r\n      pomodoroTime: this.props.time*60,\r\n      timeLeft: this.props.time*60,\r\n      audio: new Audio('./')\r\n    }\r\n    \r\n    componentDidMount() {\r\n      this.startDate = new Date()\r\n      this.timerId = setInterval(\r\n        () => {\r\n          let timeLeft = this.state.pomodoroTime - \r\n            Math.round((new Date() - this.startDate)/1000)\r\n          this.setState({timeLeft})\r\n          if(this.state.timeLeft < 1) \r\n            clearInterval(this.timerId)\r\n        },  \r\n        1000\r\n      )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      \tclearInterval(this.timerId)\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          {this.state.timeLeft < 1 ? <audio src={doneWav} autoPlay/> : null}\r\n          <Modal\r\n            show={this.state.isOpen}\r\n            onHide={this.props.stop}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                {this.props.activity.title} - {this.state.timeLeft > 0 ? `${this.state.timeLeft} sec left` : `Done`}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Image src={this.props.activity.photo} fluid className=\"mt-2 mb-3\"/>\r\n              <p>\r\n              {this.props.activity.description} If you get interrupted, whatever the reason is, click stop.\r\n              </p>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"justify-content-start\">\r\n              {this.state.timeLeft > 0 ? \r\n                <Button variant=\"secondary\" onClick={this.props.stop} className=\"\">Stop</Button> \r\n                : <Button variant=\"primary\" onClick={this.props.finish}>Claim Reward</Button>\r\n              }\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Pomodoro","import React, {Component} from 'react'\r\nimport {Button, Modal} from 'react-bootstrap'\r\nimport doneWav from '../sounds/school.wav'\r\n\r\nclass Break extends Component {\r\n    state = {\r\n      isOpen: true,\r\n      breakTime: 5*60,\r\n      timeLeft: 5*60,\r\n      audio: new Audio('./')\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.startDate = new Date()\r\n      this.timerId = setInterval(\r\n        () => {\r\n          let timeLeft = this.state.breakTime - Math.round((new Date() - this.startDate)/1000)\r\n          this.setState({timeLeft})\r\n          if(this.state.timeLeft < 1) clearInterval(this.timerId)\r\n        },  \r\n        1000\r\n      )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      \tclearInterval(this.timerId)\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          {this.state.timeLeft < 1 ? <audio src={doneWav} autoPlay/> : null}\r\n          <Modal\r\n            show={this.state.isOpen}\r\n            onHide={this.props.stop}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                Quick break - {this.state.timeLeft > 0 ? `${this.state.timeLeft} sec left` : `Done`}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>\r\n              Take a quick {this.state.breakTime/60} min break. Get back to work afterwards, be productive, time goes on. \r\n              </p>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"justify-content-start\">\r\n              <Button variant=\"secondary\" onClick={this.props.stop} className=\"\">Stop</Button> \r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Break","import React, {Component} from 'react';\n//import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container, Row, Col} from 'react-bootstrap'\n\nimport Activity from './components/Activity'\nimport Header from './components/Header'\nimport Pomodoro from './components/Pomodoro'\nimport Break from './components/Break'\n\n// state: title / description / photo / time\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      activities: [\n        {\n          title: \"Problem solving\",\n          description: \"Solve problems, algorithms on Codility, HackerRank and other similar sites.\",\n          photo: \"https://www.codility.com/wp-content/uploads/2020/03/CodilitySocial.jpg\",\n          time: 150\n        },\n        {\n          title: \"Build web app\",\n          description: \"Build apps with React mainly.\",\n          photo: \"https://i.ytimg.com/vi/NO2DaxhoWHk/maxresdefault.jpg\",\n          time: 120\n        },\n        {\n          title: \"Learn JavaScript\",\n          description: \"Review JavaScript theory needed directly from mdn.\",\n          photo: \"https://www.ciara.world/images/javascript.png\",\n          time: 60\n        },\n        {\n          title: \"Learn React\",\n          description: \"Review React theory directly from React docs, tutorial and guides.\",\n          photo: \"https://hackernoon.com/hn-images/1*h8d-4wYLN9wwiEsLAA_5yg.jpeg\",\n          time: 60\n        },\n        {\n          title: \"Apply to jobs\",\n          description: \"Search for jobs on linkedin, talk with friends, apply.\",\n          photo: \"https://lh3.googleusercontent.com/z0gMa0aRAkLxjS-lVaSOO1Ygb48rttOcR5iRpgJPTM6_enkfeCuN37JWm_9qcHJaJw\",\n          time: 30\n        },        \n      ],\n      todaysReward: 0,\n      maxReward: 80/7/2,\n      pomodoroRunning: false,\n      pomodoroIndex: undefined,\n      pomodoroTime: 30,\n      pomodorosDoneToday: 0,\n      pauseRunning: false \n    }\n  }\n\n  finishPomodoro = (i) => {\n    let activities = this.state.activities.slice()\n    activities[i].time -= 30\n    let pomodorosDoneToday = this.state.pomodorosDoneToday + 1\n    let todaysReward = this.state.todaysReward + Math.ceil(Math.random()*this.state.maxReward)\n    this.setState({\n      todaysReward, \n      activities,\n      pomodoroRunning: false, \n      pauseRunning: true,\n      pomodoroIndex: undefined,\n      pomodorosDoneToday})\n  }\n\n  stopPomodoro = () => this.setState({pomodoroRunning: false, pomodoroIndex: undefined})\n\n  render() {\n    return (\n      <>\n      {this.state.pauseRunning ? \n        <Break stop={() => this.setState({pauseRunning: false})} /> \n        : null}\n      {this.state.pomodoroRunning ? \n        <Pomodoro \n          finish={() => this.finishPomodoro(this.state.pomodoroIndex)}\n          stop={this.stopPomodoro}\n          activity={this.state.activities[this.state.pomodoroIndex]}\n          time={this.state.pomodoroTime}\n        /> \n        : null}\n      <Header  \n        reward={this.state.todaysReward}\n        pomodoros={this.state.pomodorosDoneToday} \n        break={() => this.setState({pauseRunning: true})}\n        />\n      <Container>\n        <Row>\n        {this.state.activities.map( (element, index) => \n          element.time > 0 ? \n          <Col sm={6} md={4} className=\"pb-4 px-4\" key={index}>\n            <Activity \n              title={element.title} \n              description={element.description}\n              photo={element.photo}\n              time={element.time}\n              click={() => this.setState({pomodoroRunning: true, pomodoroIndex: index})}\n            />\n          </Col> : null     \n        )}\n        </Row>\n      </Container>      \n      </>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}