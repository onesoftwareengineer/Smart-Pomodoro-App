{"version":3,"sources":["sounds/sunny.wav","sounds/school.wav","components/Activity.js","components/Header.js","components/Pomodoro.js","components/Break.js","components/Navigation.js","data/activities.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Activity","props","Card","onClick","click","Img","variant","src","photo","Body","Title","title","time","Text","description","Header","Jumbotron","className","Container","pomodoros","reward","Pomodoro","state","timeLeft","targetDate","Date","parse","audio","Audio","doneWav","this","muted","play","intervalId","setInterval","setState","document","Math","round","clearInterval","pause","pomodoroIsRunning","activity","button","Button","stop","finish","Modal","show","onHide","backdrop","keyboard","size","aria-labelledby","centered","closeButton","Image","fluid","Footer","Component","Break","isOpen","breakTime","startDate","timerId","autoPlay","Navigation","loggedStatus","user","Nav","Link","href","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","activities","App","finishPomodoro","i","slice","pomodorosDoneToday","todaysReward","ceil","random","maxReward","pomodoroRunning","pauseRunning","pomodoroIndex","undefined","stopPomodoro","pomodoroTime","loggedUser","Row","map","element","index","Col","sm","md","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.30bc896b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunny.4cc18d72.wav\";","module.exports = __webpack_public_path__ + \"static/media/school.6bc38242.wav\";","import React from 'react'\r\nimport {Card, Button} from 'react-bootstrap'\r\n\r\nfunction Activity(props) {\r\n    return (\r\n        <Card onClick={props.click}>\r\n        <Card.Img variant=\"top\" src={props.photo} />\r\n        <Card.Body>\r\n            <Card.Title>{props.title} - {props.time} mins</Card.Title>\r\n            <Card.Text>\r\n                {props.description}\r\n            </Card.Text>\r\n            {/* <Button variant=\"primary\" className=\"blueColor\">Start</Button> */}\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Activity","import React from 'react'\r\nimport {Jumbotron, Container, Button} from 'react-bootstrap'\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <Jumbotron className=\"py-5\">\r\n            <Container className=\"text-center\">\r\n                <h3>It is not enough to be industrious; so are the ants. What are you industrious about?\r\n                    \t<br /><span className=\"font-weight-light\"> You worked {props.pomodoros/2} hrs and won {props.reward} ron today.</span>\r\n                </h3>\r\n            </Container>\r\n        </Jumbotron>\r\n    )\r\n} \r\n\r\nexport default Header","import React, {Component} from 'react'\r\nimport {Button, Modal, Image} from 'react-bootstrap'\r\nimport doneWav from '../sounds/sunny.wav'\r\n\r\nclass Pomodoro extends Component {\r\n    state = {\r\n      //time left stored in seconds \r\n      timeLeft: this.props.time*60\r\n    }\r\n    targetDate = Date.parse(new Date()) + this.props.time*60*1000 \r\n    audio = new Audio(doneWav)\r\n\r\n    componentDidMount() {\r\n      this.audio.muted = true\r\n      this.audio.play()\r\n\r\n      this.intervalId = setInterval( () => {\r\n        let timeLeft = ( this.targetDate - Date.parse(new Date()) )/1000\r\n        this.setState({timeLeft})\r\n        document.title = `${Math.round((timeLeft/(this.props.time*60))*100)}%`\r\n        if(timeLeft < 1) {\r\n          clearInterval(this.intervalId) \r\n        }\r\n      }, 500) \r\n    }\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(this.intervalId)\r\n      this.audio.pause()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      const pomodoroIsRunning = this.state.timeLeft > 1\r\n      if(!pomodoroIsRunning) \r\n        this.audio.muted = false\r\n        this.audio.play()\r\n    }\r\n\r\n    render() {\r\n      const pomodoroIsRunning = this.state.timeLeft > 1\r\n      const title = pomodoroIsRunning ? \r\n        `${this.props.activity.title} - ${this.state.timeLeft} sec left` : \r\n        `Hurray, job done !` \r\n      const button = pomodoroIsRunning ? \r\n        <Button variant=\"secondary\" onClick={this.props.stop} className=\"\">Stop</Button> : \r\n        <Button variant=\"primary\" onClick={this.props.finish}>Claim Reward</Button>\r\n\r\n      return (\r\n        <>\r\n          <Modal\r\n            show={true}\r\n            onHide={this.props.stop}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                { title }\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Image src={this.props.activity.photo} fluid className=\"mt-2 mb-3\"/>\r\n              <p>\r\n                <strong>{`Focus on the following activity for ${this.props.time} minutes. If you defocus click stop: `}</strong>\r\n                { this.props.activity.description }\r\n              </p>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"justify-content-start\">\r\n              { button }\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Pomodoro\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport {Button, Modal} from 'react-bootstrap'\r\nimport doneWav from '../sounds/school.wav'\r\n\r\nclass Break extends Component {\r\n    state = {\r\n      isOpen: true,\r\n      breakTime: 5*60,\r\n      timeLeft: 5*60,\r\n      audio: new Audio('./')\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.startDate = new Date()\r\n      this.timerId = setInterval(\r\n        () => {\r\n          let timeLeft = this.state.breakTime - Math.round((new Date() - this.startDate)/1000)\r\n          this.setState({timeLeft})\r\n          if(this.state.timeLeft < 1) clearInterval(this.timerId)\r\n        },  \r\n        1000\r\n      )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      \tclearInterval(this.timerId)\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          {this.state.timeLeft < 1 ? <audio src={doneWav} autoPlay/> : null}\r\n          <Modal\r\n            show={this.state.isOpen}\r\n            onHide={this.props.stop}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                Quick break - {this.state.timeLeft > 0 ? `${this.state.timeLeft} sec left` : `Done`}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>\r\n              Take a quick {this.state.breakTime/60} min break. Get back to work afterwards, be productive, time goes on. \r\n              </p>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"justify-content-start\">\r\n              <Button variant=\"secondary\" onClick={this.props.stop} className=\"\">Stop</Button> \r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Break","import React from 'react'\r\nimport {Navbar, Nav, Container} from 'react-bootstrap'\r\n\r\nfunction Navigation (props) {\r\n    let loggedStatus = props.user ? \r\n            <>\r\n                <Nav.Link href=\"#home\">Welcome {props.user}</Nav.Link> \r\n                <span className=\"nav-link d-none d-lg-block\">|</span>\r\n                <Nav.Link href=\"#features\">Sign out</Nav.Link>\r\n            </>\r\n        : \r\n            <>\r\n                <Nav.Link href=\"#home\">Sign in</Nav.Link>\r\n                <span className=\"nav-link d-none d-lg-block\">|</span>\r\n                <Nav.Link href=\"#features\">New account</Nav.Link>\r\n            </>\r\n\r\n    return(\r\n        <Navbar variant=\"dark\" expand=\"lg\" className=\"blueColor\">\r\n        <Container>\r\n            <Navbar.Brand href=\"#home\">Smart Pomodoro App</Navbar.Brand>  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav d-flex\">\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                <Nav.Link href=\"#home\">Activities</Nav.Link>\r\n                <Nav.Link href=\"#features\">Rewards</Nav.Link>\r\n            </Nav>\r\n            <Nav className=\"font-weight-light\">\r\n                {loggedStatus}\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Container>\r\n        </Navbar>    \r\n    )\r\n}\r\n\r\nexport default Navigation\r\n\r\n\r\n\r\n","//user activities\r\nexport let activities = [\r\n    {\r\n      title: \"Problem solving\",\r\n      description: \"Solve problems, algorithms on Codility, HackerRank and other similar sites.\",\r\n      photo: \"https://bulldogjob.pl/system/companies/logos/000/000/230/original/Logo_-_grey_big.png\",\r\n      time: 60\r\n    },  \r\n    {\r\n      title: \"Build REST APIs\",\r\n      description: \"Review NODE, DBs and APIs theory. Build REST APIs.\",\r\n      photo: \"https://bs-uploads.toptal.io/blackfish-uploads/blog/post/seo/og_image_file/og_image/15921/secure-rest-api-in-nodejs-18f43b3033c239da5d2525cfd9fdc98f.png\",\r\n      time: 120\r\n    },    \r\n    {\r\n      title: \"Build React apps\",\r\n      description: \"Review React theory directly from docs, tutorial and guides. Build React apps.\",\r\n      photo: \"https://i.ytimg.com/vi/NO2DaxhoWHk/maxresdefault.jpg\",\r\n      time: 180\r\n    },        \r\n    {\r\n      title: \"Review JavaScript\",\r\n      description: \"Review JavaScript theory needed directly from mdn.\",\r\n      photo: \"https://www.ciara.world/images/javascript.png\",\r\n      time: 60\r\n    },        \r\n    {\r\n      title: \"Apply to jobs\",\r\n      description: \"Search for jobs on linkedin, talk with friends, apply.\",\r\n      photo: \"https://lh3.googleusercontent.com/z0gMa0aRAkLxjS-lVaSOO1Ygb48rttOcR5iRpgJPTM6_enkfeCuN37JWm_9qcHJaJw\",\r\n      time: 30\r\n    },        \r\n  ]","import React, {Component} from 'react';\n//import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container, Row, Col} from 'react-bootstrap'\n\nimport Activity from './components/Activity'\nimport Header from './components/Header'\nimport Pomodoro from './components/Pomodoro'\nimport Break from './components/Break'\nimport Navigation from './components/Navigation'\n\nimport {activities} from './data/activities'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      activities: activities,\n      todaysReward: 0,\n      maxReward: 80/7/2,\n      pomodoroRunning: false,\n      pomodoroIndex: undefined,\n      pomodoroTime: 30,\n      pomodorosDoneToday: 0,\n      pauseRunning: false,\n      loggedUser: \"\"\n    }\n  }\n\n  finishPomodoro = (i) => {\n    let activities = this.state.activities.slice()\n    activities[i].time -= 30\n    let pomodorosDoneToday = this.state.pomodorosDoneToday + 1\n    let todaysReward = this.state.todaysReward + Math.ceil(Math.random()*this.state.maxReward)\n    this.setState({\n      todaysReward, \n      activities,\n      pomodoroRunning: false, \n      pauseRunning: true,\n      pomodoroIndex: undefined,\n      pomodorosDoneToday})\n  }\n\n  stopPomodoro = () => this.setState({pomodoroRunning: false, pomodoroIndex: undefined})\n\n  render() {\n    return (\n      <>\n      <Navigation user={this.state.loggedUser} />\n      {this.state.pauseRunning ? \n        <Break stop={() => this.setState({pauseRunning: false})} /> \n        : null}\n      {this.state.pomodoroRunning ? \n        <Pomodoro \n          finish={() => this.finishPomodoro(this.state.pomodoroIndex)}\n          stop={this.stopPomodoro}\n          activity={this.state.activities[this.state.pomodoroIndex]}\n          time={this.state.pomodoroTime}\n        /> \n        : null}\n      <Header  \n        reward={this.state.todaysReward}\n        pomodoros={this.state.pomodorosDoneToday} \n        />\n      <Container>\n        <Row>\n        {this.state.activities.map( (element, index) => \n          element.time > 0 ? \n          <Col sm={6} md={4} className=\"pb-3 px-4\" key={index}>\n            <Activity \n              title={element.title} \n              description={element.description}\n              photo={element.photo}\n              time={element.time}\n              click={() => this.setState({pomodoroRunning: true, pomodoroIndex: index})}\n            />\n          </Col> : null     \n        )}\n        </Row>\n      </Container>      \n      </>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './app.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}